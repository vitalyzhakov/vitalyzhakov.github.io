<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI/CD on Инфраструктура ИТ</title>
    <link>https://vitalyzhakov.github.io/tags/ci/cd/</link>
    <description>Recent content in CI/CD on Инфраструктура ИТ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Thu, 15 Oct 2020 00:10:06 +0500</lastBuildDate>
    
	<atom:link href="https://vitalyzhakov.github.io/tags/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Схема CI/CD  для веб-разработчиков на основе open-source инструментов</title>
      <link>https://vitalyzhakov.github.io/post/ci-cd/</link>
      <pubDate>Thu, 15 Oct 2020 00:10:06 +0500</pubDate>
      
      <guid>https://vitalyzhakov.github.io/post/ci-cd/</guid>
      <description>Наверное, все видели стандартную восьмёрку, как выглядит CI/CD
Но обычно никто не рассказывает, как именно пошагово решить этот вопрос.
Сегодня попробуем реализовать в деталях этот процесс на примере разработки веб-сервисов.
На схеме мы видим, как параллельно сдаются задачи (в виде коммитов) в master-ветку.
Далее принимается решение о релизе, он фиксируется, отправляется в registry (магазин приложений), с registry готовое приложение попадает в прод.
Далее поэтапно рассмотрим реализацию каждого шага.
Сердцем всей истории у нас является Gitlab и Gitab-CI.</description>
    </item>
    
  </channel>
</rss>