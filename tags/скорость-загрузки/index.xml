<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Скорость загрузки on Инфраструктура ИТ</title>
    <link>https://vitalyzhakov.github.io/tags/%D1%81%D0%BA%D0%BE%D1%80%D0%BE%D1%81%D1%82%D1%8C-%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8/</link>
    <description>Recent content in Скорость загрузки on Инфраструктура ИТ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 03 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vitalyzhakov.github.io/tags/%D1%81%D0%BA%D0%BE%D1%80%D0%BE%D1%81%D1%82%D1%8C-%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Оптимизация скорости загрузки</title>
      <link>https://vitalyzhakov.github.io/post/page-load-time-optimizing/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vitalyzhakov.github.io/post/page-load-time-optimizing/</guid>
      <description>Шаг 1. Постановка цели Основное на этом шаге - определиться, зачем вам оптимизировать скорость загрузки. К примеру, у вас сайт-визитка, продаёте вы бани под ключ. Продажи происходят в той же бане, за столом или по телефону.
Вполне возможно, что очередная секунда времени загрузки не влияет на продажи и вложенные затраты не окупятся.
Стоит сфокусироваться на тех сайтах или страницах, которые влияют на ваши целевые показатели.
Шаг 2. Сбор статистики и выбор узкого места для оптимизации Во-первых, обратимся к событиям, вызываевым в разных стадиях загрузки страницы:</description>
    </item>
    
    <item>
      <title>Запуск lighthouse (chrome audit) без SSL</title>
      <link>https://vitalyzhakov.github.io/post/lighthouse-without-ssl/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://vitalyzhakov.github.io/post/lighthouse-without-ssl/</guid>
      <description> Не всегда есть возможность использовать валидный SSL для проектов в тестовой среде.
Для анализа скорости загрузки страниц выпустили lighthouse и иетегрировали во вкладку инструментов разработчика Audit.
Решение 1) Получаем содержимое ветки репозитория https://github.com/Janpot/lighthouse/tree/ignore-https-errors
2) Устанавливаем зависимости
npm i  3) Запускаем
./lighthouse-cli/index.js &amp;lt;url&amp;gt; --ignore-https-errors --view  </description>
    </item>
    
    <item>
      <title>Замеры скорости загрузки вебсайтов</title>
      <link>https://vitalyzhakov.github.io/post/sitespeed/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://vitalyzhakov.github.io/post/sitespeed/</guid>
      <description>Наиболее продвинутые компании на высококонкуретном рынке B2C понимают, что высокая скорость загрузки сайта положительно сказывается не только на имидже, но и на показателях конверсии.
Для того, чтобы что-то оптимизировать, нужно это замерить. В измерениях нам поможет инструмент под названием sitespeed.io.
В упрощённом варианте можно использовать всего 2 машины - 1 сервер и 1 клиент. Машины нужны изолированные, так как на измерения клиента не должны влиять операции на сервере.
Если потребуется, можно нарастить количество клиентов.</description>
    </item>
    
  </channel>
</rss>